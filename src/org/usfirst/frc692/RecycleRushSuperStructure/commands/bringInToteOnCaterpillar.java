// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc692.RecycleRushSuperStructure.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc692.RecycleRushSuperStructure.Robot;

/**
 *
 */
public class  bringInToteOnCaterpillar extends Command {

    public bringInToteOnCaterpillar() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.caterpillar);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if(Robot.gatherer.isGathererReadyToRetract())
    	{
    		Robot.caterpillar.caterpillarReverse();
    		System.out.println("Caterpillar activated!");
    	}
    	else 
    	{
    		Robot.caterpillar.caterpillarStop();
    		System.out.println("Caterpillar is not active.");
    		System.out.println("Caterpillar is stopped");
    	}
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        if(Robot.gatherer.toteDetector()) 
        {
        	System.out.println("Tote is fully loaded!");
        	return true;
        }
        else
        {
        	return false;
        }
    }
    

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
    // caterpillar takes in tote and stops when the tote is fully loaded.
    // ND 1/16/15
}
