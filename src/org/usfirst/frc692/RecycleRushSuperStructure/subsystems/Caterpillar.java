// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc692.RecycleRushSuperStructure.subsystems;

import org.usfirst.frc692.RecycleRushSuperStructure.RobotMap;
import org.usfirst.frc692.RecycleRushSuperStructure.commands.*;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Caterpillar extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController caterpillarBelt = RobotMap.caterpillarcaterpillarBelt;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new caterpillarControlWithJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void caterpillarForward()
    {
    	caterpillarBelt.set(0.25);
    }
    // sets caterpillar belt at 25% power in the forward direction 
    // tentative value may be changed later
    // AC 1/15/15
    
    public void caterpillarReverse()
    {
    	caterpillarBelt.set(-0.25);
    }
    // sets caterpillar belt at 25% power in the reverse direction 
    // also a tentative value -- subject to change
    // AC 1/15/15
    
    public void caterpillarStop()
    {
    	caterpillarBelt.set(0.0);
    }
    // sets caterpillar belt to stop 
    // ND 1/16/15
    
    public void takeJoystickAxisValue(double x)
    {
    	caterpillarBelt.set(x);
    }
    //takes value of the joystick and inputs it into the caterpillar belt motor
    //AC 1/24/15
    
}

